/*
 * This file was automatically generated by EvoSuite
 * Sun Dec 15 23:55:17 GMT 2024
 */

package com.tts;

import org.junit.Test;
import static org.junit.Assert.*;
import com.tts.Mail;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Mail_ESTest extends Mail_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Mail mail0 = new Mail((String) null, "", "", (String) null);
      assertFalse(mail0.isRead());
      
      mail0.markAsRead();
      boolean boolean0 = mail0.isRead();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Mail mail0 = new Mail("6o_j0|[j3tfL2o", "", "6o_j0|[j3tfL2o", "");
      assertEquals("6o_j0|[j3tfL2o", mail0.getSubject());
      
      mail0.setSubject((String) null);
      mail0.getSubject();
      assertEquals("6o_j0|[j3tfL2o", mail0.getSender());
      assertFalse(mail0.isRead());
      assertEquals("", mail0.getBody());
      assertEquals("", mail0.getRecipient());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Mail mail0 = new Mail((String) null, (String) null, "", "\nSubject: ");
      String string0 = mail0.getSubject();
      assertNotNull(string0);
      assertFalse(mail0.isRead());
      assertEquals("\nSubject: ", mail0.getBody());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Mail mail0 = new Mail((String) null, "", (String) null, "");
      String string0 = mail0.getSender();
      assertNull(string0);
      assertFalse(mail0.isRead());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Mail mail0 = new Mail("", "", "^Sj9P0rp@:=8aHDk", (String) null);
      String string0 = mail0.getSender();
      assertEquals("", string0);
      assertFalse(mail0.isRead());
      assertEquals("^Sj9P0rp@:=8aHDk", mail0.getSubject());
      assertEquals("", mail0.getRecipient());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Mail mail0 = new Mail((String) null, (String) null, (String) null, (String) null);
      mail0.getRecipient();
      assertFalse(mail0.isRead());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Mail mail0 = new Mail("^10`R%'|uLvuq;o7oIK", "", "", "");
      String string0 = mail0.getRecipient();
      assertEquals("^10`R%'|uLvuq;o7oIK", mail0.getSender());
      assertEquals("", string0);
      assertEquals("", mail0.getBody());
      assertEquals("", mail0.getSubject());
      assertFalse(mail0.isRead());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Mail mail0 = new Mail("KED'`NR98aIq'`K", "EEUFk6@\"1KH6", "KED'`NR98aIq'`K", "EEUFk6@\"1KH6");
      assertEquals("EEUFk6@\"1KH6", mail0.getBody());
      
      mail0.setBody((String) null);
      mail0.getBody();
      assertEquals("KED'`NR98aIq'`K", mail0.getSender());
      assertFalse(mail0.isRead());
      assertEquals("EEUFk6@\"1KH6", mail0.getRecipient());
      assertEquals("KED'`NR98aIq'`K", mail0.getSubject());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Mail mail0 = new Mail("^10`R%'|uLvuq;o7oIK", "", "", "");
      String string0 = mail0.getBody();
      assertEquals("", string0);
      assertEquals("^10`R%'|uLvuq;o7oIK", mail0.getSender());
      assertEquals("", mail0.getRecipient());
      assertFalse(mail0.isRead());
      assertEquals("", mail0.getSubject());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Mail mail0 = new Mail("!bCeh~@Z", "!bCeh~@Z", "!bCeh~@Z", "!bCeh~@Z");
      String string0 = mail0.toString();
      assertEquals("Mail from: !bCeh~@Z\nTo: !bCeh~@Z\nSubject: !bCeh~@Z\nRead: false", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Mail mail0 = new Mail("!bCeh~@Z", "!bCeh~@Z", "!bCeh~@Z", "!bCeh~@Z");
      mail0.setSender("!bCeh~@Z");
      assertFalse(mail0.isRead());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Mail mail0 = new Mail("!bCeh~@Z", "!bCeh~@Z", "!bCeh~@Z", "!bCeh~@Z");
      mail0.setRecipient("!bCeh~@Z");
      assertFalse(mail0.isRead());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Mail mail0 = new Mail("!bCeh~@Z", "!bCeh~@Z", "!bCeh~@Z", "!bCeh~@Z");
      mail0.getSender();
      assertFalse(mail0.isRead());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Mail mail0 = new Mail("!bCeh~@Z", "!bCeh~@Z", "!bCeh~@Z", "!bCeh~@Z");
      boolean boolean0 = mail0.isRead();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Mail mail0 = new Mail("!bCeh~@Z", "!bCeh~@Z", "!bCeh~@Z", "!bCeh~@Z");
      mail0.getRecipient();
      assertFalse(mail0.isRead());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Mail mail0 = new Mail("!bCeh~@Z", "!bCeh~@Z", "!bCeh~@Z", "!bCeh~@Z");
      mail0.getSubject();
      assertFalse(mail0.isRead());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Mail mail0 = new Mail("!bCeh~@Z", "!bCeh~@Z", "!bCeh~@Z", "!bCeh~@Z");
      mail0.getBody();
      assertFalse(mail0.isRead());
  }
}
