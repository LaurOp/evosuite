/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 17 09:53:08 GMT 2024
 */

package com.tts;

import org.junit.Test;
import static org.junit.Assert.*;
import com.tts.Mail;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Mail_ESTest extends Mail_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Mail mail0 = new Mail("Y~Ge iADmp,.jW{k|3]", "Y~Ge iADmp,.jW{k|3]", "Y~Ge iADmp,.jW{k|3]", "Y~Ge iADmp,.jW{k|3]");
      assertFalse(mail0.isRead());
      
      mail0.markAsRead();
      boolean boolean0 = mail0.isRead();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Mail mail0 = new Mail("", "", (String) null, (String) null);
      String string0 = mail0.getSubject();
      assertNull(string0);
      assertFalse(mail0.isRead());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Mail mail0 = new Mail("", "", "", "");
      mail0.getSubject();
      assertFalse(mail0.isRead());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Mail mail0 = new Mail((String) null, (String) null, (String) null, (String) null);
      mail0.getSender();
      assertFalse(mail0.isRead());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Mail mail0 = new Mail("p", "p", "p", "p");
      mail0.getSender();
      assertFalse(mail0.isRead());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Mail mail0 = new Mail((String) null, (String) null, (String) null, (String) null);
      mail0.getRecipient();
      assertFalse(mail0.isRead());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Mail mail0 = new Mail("", "", "", "");
      mail0.getRecipient();
      assertFalse(mail0.isRead());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Mail mail0 = new Mail("b", "b", "b", "b");
      mail0.getBody();
      assertFalse(mail0.isRead());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Mail mail0 = new Mail("", "", "", "");
      mail0.getBody();
      assertFalse(mail0.isRead());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Mail mail0 = new Mail("Y~Ge iADmp,.jW{k|3]", "Y~Ge iADmp,.jW{k|3]", "Y~Ge iADmp,.jW{k|3]", "Y~Ge iADmp,.jW{k|3]");
      String string0 = mail0.toString();
      assertEquals("Mail from: Y~Ge iADmp,.jW{k|3]\nTo: Y~Ge iADmp,.jW{k|3]\nSubject: Y~Ge iADmp,.jW{k|3]\nRead: false", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Mail mail0 = new Mail("%\"", "%\"", "%\"", "%\"");
      mail0.setSender("%\"");
      assertFalse(mail0.isRead());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Mail mail0 = new Mail("%\"", "%\"", "%\"", "%\"");
      mail0.setBody("%\"");
      assertFalse(mail0.isRead());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Mail mail0 = new Mail("%\"", "%\"", "%\"", "%\"");
      mail0.setSubject("%\"");
      assertFalse(mail0.isRead());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Mail mail0 = new Mail("", "", "", "");
      mail0.setRecipient("");
      assertFalse(mail0.isRead());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Mail mail0 = new Mail("", "", "L-k-e3-", "com.tts.Mail");
      String string0 = mail0.getSender();
      assertEquals("L-k-e3-", mail0.getSubject());
      assertEquals("com.tts.Mail", mail0.getBody());
      assertEquals("", string0);
      assertEquals("", mail0.getRecipient());
      assertFalse(mail0.isRead());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Mail mail0 = new Mail("Y~Ge iADmp,.jW{k|3]", "Y~Ge iADmp,.jW{k|3]", "Y~Ge iADmp,.jW{k|3]", "Y~Ge iADmp,.jW{k|3]");
      boolean boolean0 = mail0.isRead();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Mail mail0 = new Mail("K]tVU", "K]tVU", "K]tVU", "K]tVU");
      mail0.getRecipient();
      assertFalse(mail0.isRead());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Mail mail0 = new Mail("Y~Ge iADmp,.jW{k|3]", "Y~Ge iADmp,.jW{k|3]", "Y~Ge iADmp,.jW{k|3]", "Y~Ge iADmp,.jW{k|3]");
      mail0.getSubject();
      assertFalse(mail0.isRead());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Mail mail0 = new Mail((String) null, (String) null, (String) null, (String) null);
      mail0.getBody();
      assertFalse(mail0.isRead());
  }
}
